#！/bin/sh

#Android shell can not use map!!!
IRDEVICEEVENT="/dev/input/event"
IRMATCHED=0
MATCHEDEVENT=0

#get ir device path
createIRdeviceEventPath()
{
    echo "**********step 2 get device ir match index**********"
    check_results=$(cat /proc/bus/input/devices |grep 'Name=')    
    result=$(echo ${check_results} | sed 's/N: Name=//g' |sed 's/ //g' |sed 's/"/ /g')
    matchindex=1
    array=(${result// / })
    for var in ${array[@]}
    do
       case $var in
       ir* | *ir | *IR | IR* | *TV_IR*)
           echo $var " match event" $matchindex
           IRMATCHED=1
           break
        ;;
       *)
           let matchindex++
       esac
    done
    
    if [[ $IRMATCHED -eq 0 ]]; then
        echo "can not match ir device,may used keypad device,will try!!!"
        matchindex=1
        for var in ${array[@]}
        do
            case $var in
            *keypad | *KEYPAD | *keyboard | *KEYBOARD)
                echo $var " match event" $matchindex
                break
                ;;
            *)
                let matchindex++
            esac
        done
    fi
    
    echo "**********step 3 get device ir match event number********"
    echo "match event in handlers ..."
    event_results=$(cat /proc/bus/input/devices |grep "H: Handlers=")
    result_events=$(echo ${event_results} | sed 's/H: Handlers//g')
    temparray_events=$(echo ${result_events} |sed 's/ /,/g')
    array_events=(${temparray_events//=/ })
        
    index=1
    for varevents in ${array_events[@]}
    do  
        if [[ $index -eq $matchindex ]]; then
            names=(${varevents//,/ })
            for name in ${names[@]}
            do
                if [[ $name == *"event"* ]]; then
                    MATCHEDEVENT=1
                    IRDEVICEEVENT="${IRDEVICEEVENT}${name: -1}"
                    echo "match event" $IRDEVICEEVENT
                    return
                fi
            done
        else
            let index++
        fi
    done
    
    if [[ $MATCHEDEVENT -eq 0 ]]; then
        echo "handlers can not match event, try macth in sysfs ..."
        event_results=$(cat /proc/bus/input/devices |grep "S: Sysfs=")
        result_events=$(echo ${event_results} | sed 's/S: Sysfs=//g')
        array_events=(${result_events// / })
        index=1
    
        for varevents in ${array_events[@]}
        do
            if [[ $index -eq $matchindex ]]; then
                IRDEVICEEVENT="${IRDEVICEEVENT}${varevents: -1}"
                echo "match event" $IRDEVICEEVENT
                break
            else
                let index++
            fi
        done
    fi
}


#$1 scankey code value  $2 keycode name $3 sleep time value*100ms
key()
{
	DEALAYTIME=$3
	sendevent ${IRDEVICEEVENT} 1 $1  1
	sendevent ${IRDEVICEEVENT} 0 0 0
	sendevent ${IRDEVICEEVENT} 1 $1  0
	sendevent ${IRDEVICEEVENT} 0 0 0
	if [ "$DEALAYTIME" == "random" ];then
		#sleep 0-10s
		RANDOMTIME=$(date +%s)
		DEALAYTIME=$(expr $RANDOMTIME % 100)
	fi
	echo key $1"("$2")" "and sleep" $((100*$DEALAYTIME)) "ms"
	busybox usleep $((100000*$DEALAYTIME))
}

#$1 is: keyname, $2 is : repeat times, $3 is delay time $4 scankeycode value
repeatkey()
{
	repeattimes=$2
	while [[ $repeattimes > 0 ]]; do
		key $4 $1 $3
		let repeattimes=repeattimes-1
	done
}

# auto create don't change it!!!!
autotestkey()
{
	repeatkey "menu" "1" "1"
}

echo "======================================start auto key test======================================="
count=0


echo "**********step 1 disable ir , keypad and ignore standby **********"
#this disable keypad and ir need sync CBB inputLimit by CAOSHUAI: https://gitlab.gz.cvte.cn/tv_cbb_draft/android/InputLimit 
echo 0XFFFF > /proc/bus/input/limitkeyvalue
setprop debug.swat.ignore.auto.standby 1

createIRdeviceEventPath

if [[ "$1" -gt 0 ]]>/dev/null; then
    count=$(echo $1 | sed 's/0*([0-9])/\1/g')
    echo "**********step 4 will be start **********"
    echo "will loop " $count "times"
    while [[ $count -gt 0 ]];do
        echo "*****************************"
        echo "remainder " $count "times!!!"
        echo "*****************************"
        autotestkey
        ((count--))
    done
else
    echo "**********step 4 will be start **********"
    echo "not limit count times!!!!"
    while [[ TRUE ]]; do
        autotestkey
        let count=count+1
        echo "*****************************"
        echo "has " $count "times!!!"
        echo "*****************************"
    done
fi
#this enable keypad and ir need sync CBB inputLimit by CAOSHUAI: https://gitlab.gz.cvte.cn/tv_cbb_draft/android/InputLimit
echo "**********step 6 enable  ir , keypad and disbale ignore standby **********"
echo 0 > /proc/bus/input/limitkeyvalue
setprop debug.swat.ignore.auto.standby 0
echo "======================================end auto key test========================================="
